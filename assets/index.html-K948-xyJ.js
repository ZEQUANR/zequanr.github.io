const t=JSON.parse('{"key":"v-2a2cbf3a","path":"/Go/Sort/","title":"Sort","lang":"zh-CN","frontmatter":{"title":"Sort","icon":"tabler:sort-a-z","author":"王泽权","date":"2023-03-30T00:00:00.000Z","category":["Go"],"tag":["Go"],"sticky":true,"star":true,"copyright":"王泽权","description":"本周给大家带来的是 Go 语言标准库中的 sort 包， 该包提供了对切片和用户定义的集合进行排序的操作。 Introduce 在本篇文章开始之前，我们需要先对 sort 包中的内容要有一个大致的了解，这对于我们接下来的学习有很大的帮助，如图 1 所示画出一个大概的关系图，要知道 sort 包并不只是有排序功能的。 Data Type 首先我们先从 sort 中的数据类型看起，在刚刚所看的图 1 中我们可以看到 sort 包中，共定义了四种数据类型，其中有三种是我们一般情况下经常会用到的数据类型，Go 语言的开发者们已经为我们写好了所需要的方法，而除去这三种基础类型后，还提供了一个接口类型，我们只需要在我们定义的数据类型中实现了接口中的三个方法就可以完成排序操作。","head":[["meta",{"property":"og:url","content":"https://zequanr.github.io/Go/Sort/"}],["meta",{"property":"og:site_name","content":"ZEQUANR"}],["meta",{"property":"og:title","content":"Sort"}],["meta",{"property":"og:description","content":"本周给大家带来的是 Go 语言标准库中的 sort 包， 该包提供了对切片和用户定义的集合进行排序的操作。 Introduce 在本篇文章开始之前，我们需要先对 sort 包中的内容要有一个大致的了解，这对于我们接下来的学习有很大的帮助，如图 1 所示画出一个大概的关系图，要知道 sort 包并不只是有排序功能的。 Data Type 首先我们先从 sort 中的数据类型看起，在刚刚所看的图 1 中我们可以看到 sort 包中，共定义了四种数据类型，其中有三种是我们一般情况下经常会用到的数据类型，Go 语言的开发者们已经为我们写好了所需要的方法，而除去这三种基础类型后，还提供了一个接口类型，我们只需要在我们定义的数据类型中实现了接口中的三个方法就可以完成排序操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://zequanr.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T09:54:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Sort"}],["meta",{"property":"article:author","content":"王泽权"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2023-03-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T09:54:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sort\\",\\"image\\":[\\"https://zequanr.github.io/\\"],\\"datePublished\\":\\"2023-03-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T09:54:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王泽权\\"}]}"]]},"headers":[{"level":2,"title":"Introduce","slug":"introduce","link":"#introduce","children":[]},{"level":2,"title":"Data Type","slug":"data-type","link":"#data-type","children":[{"level":3,"title":"Interface","slug":"interface","link":"#interface","children":[]},{"level":3,"title":"Int && Float64 && String","slug":"int-float64-string","link":"#int-float64-string","children":[]}]},{"level":2,"title":"Functions","slug":"functions","link":"#functions","children":[{"level":3,"title":"Sort","slug":"sort","link":"#sort","children":[]},{"level":3,"title":"Find && Search","slug":"find-search","link":"#find-search","children":[]},{"level":3,"title":"IsSorted","slug":"issorted","link":"#issorted","children":[]},{"level":3,"title":"Slice && SliceStable","slug":"slice-slicestable","link":"#slice-slicestable","children":[]},{"level":3,"title":"SliceIsSorted","slug":"sliceissorted","link":"#sliceissorted","children":[]}]}],"git":{"createdTime":1706176470000,"updatedTime":1706176470000,"contributors":[{"name":"ZEQUANR","email":"675897584@qq.com","commits":1}]},"readingTime":{"minutes":11.12,"words":3335},"filePathRelative":"Go/Sort/README.md","localizedDate":"2023年3月30日","excerpt":"<p>本周给大家带来的是 Go 语言标准库中的 sort 包， 该包提供了对切片和用户定义的集合进行排序的操作。</p>\\n<h2> Introduce</h2>\\n<p>在本篇文章开始之前，我们需要先对 sort 包中的内容要有一个大致的了解，这对于我们接下来的学习有很大的帮助，如图 1 所示画出一个大概的关系图，要知道 sort 包并不只是有排序功能的。</p>\\n<figure><figcaption></figcaption></figure>\\n<br>\\n<h2> Data Type</h2>\\n<p>首先我们先从 sort 中的数据类型看起，在刚刚所看的图 1 中我们可以看到 sort 包中，共定义了四种数据类型，其中有三种是我们一般情况下经常会用到的数据类型，Go 语言的开发者们已经为我们写好了所需要的方法，而除去这三种基础类型后，还提供了一个接口类型，我们只需要在我们定义的数据类型中实现了接口中的三个方法就可以完成排序操作。</p>","autoDesc":true}');export{t as data};
