const t=JSON.parse('{"key":"v-5ac0e30a","path":"/FrontEnd/JavaScript/Basic/This%20Refers%20To/","title":"this 指向","lang":"zh-CN","frontmatter":{"title":"this 指向","icon":"mingcute:finger-tap-line","author":"王泽权","date":"2022-11-22T00:00:00.000Z","category":["JavaScript"],"tag":["JavaScript"],"sticky":true,"star":true,"copyright":"王泽权","description":"在 JavaScript 中，this 关键字是一个动态上下文引用，其值取决于函数调用时的具体执行环境。理解 this 的指向对于编写高效且易于维护的 JavaScript 代码至关重要。 基本概念 函数调用方式决定 this 指向 全局作用域或默认绑定： 在非严格模式下，如果 this 出现在全局作用域（不在任何函数内部），它通常指向全局对象（浏览器环境中是 window，Node.js 环境中是 global）。 函数调用： 当一个函数作为普通函数直接调用时，this 同样指向全局对象（严格模式下为 undefined）。","head":[["meta",{"property":"og:url","content":"https://zequanr.github.io/FrontEnd/JavaScript/Basic/This%20Refers%20To/"}],["meta",{"property":"og:site_name","content":"ZEQUANR"}],["meta",{"property":"og:title","content":"this 指向"}],["meta",{"property":"og:description","content":"在 JavaScript 中，this 关键字是一个动态上下文引用，其值取决于函数调用时的具体执行环境。理解 this 的指向对于编写高效且易于维护的 JavaScript 代码至关重要。 基本概念 函数调用方式决定 this 指向 全局作用域或默认绑定： 在非严格模式下，如果 this 出现在全局作用域（不在任何函数内部），它通常指向全局对象（浏览器环境中是 window，Node.js 环境中是 global）。 函数调用： 当一个函数作为普通函数直接调用时，this 同样指向全局对象（严格模式下为 undefined）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-01T04:04:53.000Z"}],["meta",{"property":"article:author","content":"王泽权"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2022-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-01T04:04:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"this 指向\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-01T04:04:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王泽权\\"}]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"函数调用方式决定 this 指向","slug":"函数调用方式决定-this-指向","link":"#函数调用方式决定-this-指向","children":[]},{"level":3,"title":"显式绑定","slug":"显式绑定","link":"#显式绑定","children":[]}]},{"level":2,"title":"高级应用场景","slug":"高级应用场景","link":"#高级应用场景","children":[{"level":3,"title":"构造函数调用","slug":"构造函数调用","link":"#构造函数调用","children":[]},{"level":3,"title":"箭头函数","slug":"箭头函数","link":"#箭头函数","children":[]}]},{"level":2,"title":"事件处理函数中的 this","slug":"事件处理函数中的-this","link":"#事件处理函数中的-this","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1706176470000,"updatedTime":1706760293000,"contributors":[{"name":"ZEQUANR","email":"675897584@qq.com","commits":3}]},"readingTime":{"minutes":2.39,"words":717},"filePathRelative":"FrontEnd/JavaScript/Basic/This Refers To/README.md","localizedDate":"2022年11月22日","excerpt":"<p>在 JavaScript 中，this 关键字是一个动态上下文引用，其值取决于函数调用时的具体执行环境。理解 this 的指向对于编写高效且易于维护的 JavaScript 代码至关重要。</p>\\n<h2> 基本概念</h2>\\n<h3> 函数调用方式决定 this 指向</h3>\\n<p>全局作用域或默认绑定： 在非严格模式下，如果 this 出现在全局作用域（不在任何函数内部），它通常指向全局对象（浏览器环境中是 window，Node.js 环境中是 global）。\\n函数调用： 当一个函数作为普通函数直接调用时，this 同样指向全局对象（严格模式下为 undefined）。</p>","autoDesc":true}');export{t as data};
