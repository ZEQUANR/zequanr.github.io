const t=JSON.parse('{"key":"v-558cfeed","path":"/C/DataStructure/LinkedList/","title":"链表","lang":"zh-CN","frontmatter":{"title":"链表","icon":"icon-park-outline:link-one","author":"王泽权","date":"2024-01-04T00:00:00.000Z","category":["C"],"tag":["C","数据结构"],"sticky":true,"star":true,"copyright":"王泽权","description":"链表是一种线性数据结构，其中的每一个元素都是一个节点，其中每一个节点都通过指针相连接，指针记录了下一个节点的内存地址，通过它可以从当前节点访问到下一个节点。 要知道计算机中的内存空间是所有程序的公共资源，在一个复杂的系统运行环境下，空闲的内存空间可能散落在内存各处，我们知道，存储数组的内存空间必须是连续的，而当数组非常大时，内存可能无法提供如此大的连续空间，此时链表的灵活性优势就体现出来了。","head":[["meta",{"property":"og:url","content":"https://zequanr.github.io/C/DataStructure/LinkedList/"}],["meta",{"property":"og:site_name","content":"ZEQUANR"}],["meta",{"property":"og:title","content":"链表"}],["meta",{"property":"og:description","content":"链表是一种线性数据结构，其中的每一个元素都是一个节点，其中每一个节点都通过指针相连接，指针记录了下一个节点的内存地址，通过它可以从当前节点访问到下一个节点。 要知道计算机中的内存空间是所有程序的公共资源，在一个复杂的系统运行环境下，空闲的内存空间可能散落在内存各处，我们知道，存储数组的内存空间必须是连续的，而当数组非常大时，内存可能无法提供如此大的连续空间，此时链表的灵活性优势就体现出来了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://zequanr.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T07:40:36.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"链表"}],["meta",{"property":"article:author","content":"王泽权"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2024-01-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-21T07:40:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"链表\\",\\"image\\":[\\"https://zequanr.github.io/\\"],\\"datePublished\\":\\"2024-01-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-21T07:40:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王泽权\\"}]}"]]},"headers":[{"level":2,"title":"链表的结构定义","slug":"链表的结构定义","link":"#链表的结构定义","children":[]},{"level":2,"title":"链表的常用操作","slug":"链表的常用操作","link":"#链表的常用操作","children":[{"level":3,"title":"创建节点","slug":"创建节点","link":"#创建节点","children":[]},{"level":3,"title":"插入节点","slug":"插入节点","link":"#插入节点","children":[]},{"level":3,"title":"查找节点","slug":"查找节点","link":"#查找节点","children":[]},{"level":3,"title":"删除节点","slug":"删除节点","link":"#删除节点","children":[]},{"level":3,"title":"打印节点","slug":"打印节点","link":"#打印节点","children":[]},{"level":3,"title":"完整代码","slug":"完整代码","link":"#完整代码","children":[]}]},{"level":2,"title":"常见链表类型","slug":"常见链表类型","link":"#常见链表类型","children":[]}],"git":{"createdTime":1705822836000,"updatedTime":1705822836000,"contributors":[{"name":"ZEQUANR","email":"675897584@qq.com","commits":1}]},"readingTime":{"minutes":7.76,"words":2328},"filePathRelative":"C/DataStructure/LinkedList/README.md","localizedDate":"2024年1月4日","excerpt":"<p>链表是一种线性数据结构，其中的每一个元素都是一个节点，其中每一个节点都通过指针相连接，指针记录了下一个节点的内存地址，通过它可以从当前节点访问到下一个节点。</p>\\n<figure><figcaption></figcaption></figure>\\n<br>\\n<p>要知道计算机中的内存空间是所有程序的公共资源，在一个复杂的系统运行环境下，空闲的内存空间可能散落在内存各处，我们知道，存储数组的内存空间必须是连续的，而当数组非常大时，内存可能无法提供如此大的连续空间，此时链表的灵活性优势就体现出来了。</p>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}');export{t as data};
