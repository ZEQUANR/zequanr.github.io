const t=JSON.parse('{"key":"v-ca2e115c","path":"/C/DataStructure/Stack/","title":"栈","lang":"zh-CN","frontmatter":{"title":"栈","icon":"tabler:brand-stackoverflow","author":"王泽权","date":"2024-01-02T00:00:00.000Z","category":["C"],"tag":["C","数据结构"],"sticky":true,"star":true,"copyright":"王泽权","description":"栈是一种遵循先入后出的逻辑的线性数据结构。我们可以将栈类比为桌面上的一摞盘子，如果想取出底部的盘子，则需要先将上面的盘子依次移走。我们将盘子替换为各种类型的元素（如整数、字符、对象等），就得到了栈这种数据结构。 栈的常用操作 我们把堆叠元素的顶部称为“栈顶”，底部称为“栈底”。将把元素添加到栈顶的操作叫作“入栈”，删除栈顶元素的操作叫作“出栈”。","head":[["meta",{"property":"og:url","content":"https://zequanr.github.io/C/DataStructure/Stack/"}],["meta",{"property":"og:site_name","content":"ZEQUANR"}],["meta",{"property":"og:title","content":"栈"}],["meta",{"property":"og:description","content":"栈是一种遵循先入后出的逻辑的线性数据结构。我们可以将栈类比为桌面上的一摞盘子，如果想取出底部的盘子，则需要先将上面的盘子依次移走。我们将盘子替换为各种类型的元素（如整数、字符、对象等），就得到了栈这种数据结构。 栈的常用操作 我们把堆叠元素的顶部称为“栈顶”，底部称为“栈底”。将把元素添加到栈顶的操作叫作“入栈”，删除栈顶元素的操作叫作“出栈”。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://zequanr.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T07:40:36.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"栈"}],["meta",{"property":"article:author","content":"王泽权"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2024-01-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-21T07:40:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"栈\\",\\"image\\":[\\"https://zequanr.github.io/\\"],\\"datePublished\\":\\"2024-01-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-21T07:40:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王泽权\\"}]}"]]},"headers":[{"level":2,"title":"栈的常用操作","slug":"栈的常用操作","link":"#栈的常用操作","children":[]},{"level":2,"title":"栈的实现","slug":"栈的实现","link":"#栈的实现","children":[{"level":3,"title":"基于链表实现","slug":"基于链表实现","link":"#基于链表实现","children":[]},{"level":3,"title":"基于数组实现","slug":"基于数组实现","link":"#基于数组实现","children":[]}]}],"git":{"createdTime":1705822836000,"updatedTime":1705822836000,"contributors":[{"name":"ZEQUANR","email":"675897584@qq.com","commits":1}]},"readingTime":{"minutes":2.73,"words":818},"filePathRelative":"C/DataStructure/Stack/README.md","localizedDate":"2024年1月2日","excerpt":"<p>栈是一种遵循<strong>先入后出</strong>的逻辑的线性数据结构。我们可以将栈类比为桌面上的一摞盘子，如果想取出底部的盘子，则需要先将上面的盘子依次移走。我们将盘子替换为各种类型的元素（如整数、字符、对象等），就得到了栈这种数据结构。</p>\\n<figure><figcaption></figcaption></figure>\\n<br>\\n<h2> 栈的常用操作</h2>\\n<p>我们把堆叠元素的顶部称为“栈顶”，底部称为“栈底”。将把元素添加到栈顶的操作叫作“入栈”，删除栈顶元素的操作叫作“出栈”。</p>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}');export{t as data};
