const e=JSON.parse('{"key":"v-49cda705","path":"/C/DataStructure/BinaryTree/","title":"二叉树","lang":"zh-CN","frontmatter":{"title":"二叉树","icon":"tabler:binary-tree","author":"王泽权","date":"2023-08-21T00:00:00.000Z","category":["C"],"tag":["C","数据结构"],"sticky":true,"star":true,"copyright":"王泽权","description":"二叉树是计算机科学中一种基本且广泛应用的数据结构，它以独特的分层结构和高效的查找性能，在解决各种问题时展现出强大的功能。在 C 语言中，通过使用指针可以方便地构建和操作二叉树结构。本文将详细介绍 C 语言中二叉树的基本概念、实现方法以及常见操作。 二叉树是一种每个节点最多有两个子节点的树形数据结构，这两个子节点分别称为左子节点和右子节点。二叉树既可以为空，也可以由一个根节点及两棵分别作为其左右子树的二叉树构成。根据节点间的关系和附加条件，二叉树有多种变体，如完全二叉树、满二叉树、平衡二叉树（如 AVL 树和红黑树）以及特殊的二叉搜索树等。","head":[["meta",{"property":"og:url","content":"https://zequanr.github.io/C/DataStructure/BinaryTree/"}],["meta",{"property":"og:site_name","content":"ZEQUANR"}],["meta",{"property":"og:title","content":"二叉树"}],["meta",{"property":"og:description","content":"二叉树是计算机科学中一种基本且广泛应用的数据结构，它以独特的分层结构和高效的查找性能，在解决各种问题时展现出强大的功能。在 C 语言中，通过使用指针可以方便地构建和操作二叉树结构。本文将详细介绍 C 语言中二叉树的基本概念、实现方法以及常见操作。 二叉树是一种每个节点最多有两个子节点的树形数据结构，这两个子节点分别称为左子节点和右子节点。二叉树既可以为空，也可以由一个根节点及两棵分别作为其左右子树的二叉树构成。根据节点间的关系和附加条件，二叉树有多种变体，如完全二叉树、满二叉树、平衡二叉树（如 AVL 树和红黑树）以及特殊的二叉搜索树等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://zequanr.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T07:40:36.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"二叉树"}],["meta",{"property":"article:author","content":"王泽权"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2023-08-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-21T07:40:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树\\",\\"image\\":[\\"https://zequanr.github.io/\\"],\\"datePublished\\":\\"2023-08-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-21T07:40:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王泽权\\"}]}"]]},"headers":[{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"创建节点","slug":"创建节点","link":"#创建节点","children":[]},{"level":2,"title":"查询节点","slug":"查询节点","link":"#查询节点","children":[]},{"level":2,"title":"遍历节点-递归方法","slug":"遍历节点-递归方法","link":"#遍历节点-递归方法","children":[{"level":3,"title":"前序","slug":"前序","link":"#前序","children":[]},{"level":3,"title":"中序","slug":"中序","link":"#中序","children":[]},{"level":3,"title":"后序","slug":"后序","link":"#后序","children":[]}]},{"level":2,"title":"遍历节点-非递归方法","slug":"遍历节点-非递归方法","link":"#遍历节点-非递归方法","children":[{"level":3,"title":"前序","slug":"前序-1","link":"#前序-1","children":[]},{"level":3,"title":"中序","slug":"中序-1","link":"#中序-1","children":[]},{"level":3,"title":"后序","slug":"后序-1","link":"#后序-1","children":[]}]}],"git":{"createdTime":1705822836000,"updatedTime":1705822836000,"contributors":[{"name":"ZEQUANR","email":"675897584@qq.com","commits":1}]},"readingTime":{"minutes":2.51,"words":752},"filePathRelative":"C/DataStructure/BinaryTree/README.md","localizedDate":"2023年8月21日","excerpt":"<p>二叉树是计算机科学中一种基本且广泛应用的数据结构，它以独特的分层结构和高效的查找性能，在解决各种问题时展现出强大的功能。在 C 语言中，通过使用指针可以方便地构建和操作二叉树结构。本文将详细介绍 C 语言中二叉树的基本概念、实现方法以及常见操作。</p>\\n<p>二叉树是一种每个节点最多有两个子节点的树形数据结构，这两个子节点分别称为左子节点和右子节点。二叉树既可以为空，也可以由一个根节点及两棵分别作为其左右子树的二叉树构成。根据节点间的关系和附加条件，二叉树有多种变体，如完全二叉树、满二叉树、平衡二叉树（如 AVL 树和红黑树）以及特殊的二叉搜索树等。</p>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}');export{e as data};
