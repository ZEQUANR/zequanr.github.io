const t=JSON.parse('{"key":"v-40f17060","path":"/Go/String/","title":"String","lang":"zh-CN","frontmatter":{"title":"String","icon":"ant-design:field-string-outlined","author":"王泽权","date":"2023-03-25T00:00:00.000Z","category":["Go"],"tag":["Go"],"sticky":true,"star":true,"copyright":"王泽权","description":"类型说明 在 Go 语言中所提供的字符串（string）是一种基础的数据类型，在编程开发中几乎随时都会使用，本篇文章将会介绍字符串（string）的知识，帮助你更好的理解它。 // src/builtin/builtin.go // string is the set of all strings of 8-bit bytes, conventionally but not // necessarily representing UTF-8-encoded text. A string may be empty, but // not nil. Values of string type are immutable. type string string","head":[["meta",{"property":"og:url","content":"https://zequanr.github.io/Go/String/"}],["meta",{"property":"og:site_name","content":"ZEQUANR"}],["meta",{"property":"og:title","content":"String"}],["meta",{"property":"og:description","content":"类型说明 在 Go 语言中所提供的字符串（string）是一种基础的数据类型，在编程开发中几乎随时都会使用，本篇文章将会介绍字符串（string）的知识，帮助你更好的理解它。 // src/builtin/builtin.go // string is the set of all strings of 8-bit bytes, conventionally but not // necessarily representing UTF-8-encoded text. A string may be empty, but // not nil. Values of string type are immutable. type string string"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://zequanr.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T09:54:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"String"}],["meta",{"property":"article:author","content":"王泽权"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:published_time","content":"2023-03-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T09:54:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String\\",\\"image\\":[\\"https://zequanr.github.io/\\"],\\"datePublished\\":\\"2023-03-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T09:54:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王泽权\\"}]}"]]},"headers":[{"level":2,"title":"类型说明","slug":"类型说明","link":"#类型说明","children":[]},{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"类型声明","slug":"类型声明","link":"#类型声明","children":[]},{"level":2,"title":"解析","slug":"解析","link":"#解析","children":[{"level":3,"title":"stdString()","slug":"stdstring","link":"#stdstring","children":[]},{"level":3,"title":"rawString()","slug":"rawstring","link":"#rawstring","children":[]}]},{"level":2,"title":"拼接","slug":"拼接","link":"#拼接","children":[]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"将字节片转换为字符串","slug":"将字节片转换为字符串","link":"#将字节片转换为字符串","children":[]},{"level":3,"title":"将字符串转换为字节片","slug":"将字符串转换为字节片","link":"#将字符串转换为字节片","children":[]}]}],"git":{"createdTime":1706176470000,"updatedTime":1706176470000,"contributors":[{"name":"ZEQUANR","email":"675897584@qq.com","commits":1}]},"readingTime":{"minutes":6.82,"words":2047},"filePathRelative":"Go/String/README.md","localizedDate":"2023年3月25日","excerpt":"<h2> 类型说明</h2>\\n<p>在 Go 语言中所提供的字符串（string）是一种基础的数据类型，在编程开发中几乎随时都会使用，本篇文章将会介绍字符串（string）的知识，帮助你更好的理解它。</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// src/builtin/builtin.go</span>\\n\\n<span class=\\"token comment\\">// string is the set of all strings of 8-bit bytes, conventionally but not</span>\\n<span class=\\"token comment\\">// necessarily representing UTF-8-encoded text. A string may be empty, but</span>\\n<span class=\\"token comment\\">// not nil. Values of string type are immutable.</span>\\n<span class=\\"token keyword\\">type</span> <span class=\\"token builtin\\">string</span> <span class=\\"token builtin\\">string</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
