import{_ as i,o as l,c as e,a as t}from"./app-7QKrQFIj.js";const a={},r=t('<p>stdio.h 是一个核心的标准输入输出（Standard Input/Output）头文件，它提供了丰富的函数和类型定义来处理与外部设备的文本和二进制数据交换。</p><h2 id="标准-i-o-函数" tabindex="-1"><a class="header-anchor" href="#标准-i-o-函数" aria-hidden="true">#</a> 标准 I/O 函数</h2><p>以下函数用于控制台的输入和输出：</p><ul><li>printf()：输出到控制台。</li><li>scanf()：从控制台读取输入。</li><li>getchar()：从控制台读取一个字符。</li><li>putchar()：向控制台写入一个字符。</li><li>gets()：从控制台读取整行输入（已废除）。</li><li>puts()：向控制台写入一个字符串。</li></ul><h2 id="文件操作函数" tabindex="-1"><a class="header-anchor" href="#文件操作函数" aria-hidden="true">#</a> 文件操作函数</h2><p>以下函数用于文件操作：</p><ul><li>fopen()：打开文件。</li><li>fclose()：关闭文件。</li><li>freopen()：打开一个新文件，关联一个已经打开的文件指针。</li><li>fprintf()：输出到文件。</li><li>fscanf()：从文件读取数据。</li><li>getc()：从文件读取一个字符。</li><li>fgetc()：从文件读取一个字符。</li><li>putc()：向文件写入一个字符。</li><li>fputc()：向文件写入一个字符。</li><li>fgets()：从文件读取整行。</li><li>fputs()：向文件写入字符串。</li><li>fread()：从文件读取二进制数据。</li><li>fwrite()：向文件写入二进制数据。</li><li>fseek()：将文件内部指针移到指定位置。</li><li>ftell()：获取文件内部指针的当前位置。</li><li>rewind()：将文件内部指针重置到文件开始处。</li><li>fgetpos()：获取文件内部指针的当前位置。</li><li>fsetpos()：设置文件内部指针的当前位置。</li><li>feof()：判断文件内部指针是否指向文件结尾。</li><li>ferror()：返回文件错误指示器的状态。</li><li>clearerr()：重置文件错误指示器。</li><li>remove()：删除文件。</li><li>rename()：文件改名，以及移动文件。</li></ul><h2 id="字符串操作函数" tabindex="-1"><a class="header-anchor" href="#字符串操作函数" aria-hidden="true">#</a> 字符串操作函数</h2><p>以下函数用于操作字符串：</p><ul><li>sscanf()：从字符串读取数据。</li><li>sprintf()：输出到字符串。</li><li>snprintf()：输出到字符串的更安全版本，指定了输出字符串的数量。</li></ul>',10),n=[r];function s(f,c){return l(),e("div",null,n)}const d=i(a,[["render",s],["__file","index.html.vue"]]);export{d as default};
